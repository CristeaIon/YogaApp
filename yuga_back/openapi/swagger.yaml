basePath: /api/v1
definitions:
  apperror.AppError:
    properties:
      code:
        type: string
      message:
        type: string
    type: object
  model.CreateUserRequest:
    properties:
      email:
        type: string
      fullName:
        type: string
      password:
        minLength: 6
        type: string
      phone:
        type: string
    required:
    - email
    - fullName
    - password
    - phone
    type: object
  model.LoginUserRequest:
    properties:
      email:
        type: string
      password:
        minLength: 6
        type: string
    required:
    - email
    - password
    type: object
  model.RestorePasswordRequest:
    properties:
      email:
        type: string
    required:
    - email
    type: object
  model.RestorePasswordResponse:
    properties:
      contact:
        type: string
      id:
        type: string
      sendStatus:
        type: string
      sendTime:
        type: string
    type: object
  model.UpdatePasswordRequest:
    properties:
      email:
        type: string
      password:
        minLength: 6
        type: string
    required:
    - email
    - password
    type: object
  model.UserResponse:
    properties:
      createdAt:
        type: string
      email:
        type: string
      fullName:
        type: string
      phone:
        type: string
      refreshToken:
        type: string
      token:
        type: string
      updatedAt:
        type: string
    type: object
  model.ValidateCodeRequest:
    properties:
      code:
        type: string
      contact:
        type: string
      id:
        type: string
    type: object
  model.ValidateCodeResponse:
    properties:
      status:
        type: string
    type: object
host: localhost:9090
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Gin Swagger Yoga app API
  version: "1.0"
paths:
  /password/restore:
    post:
      consumes:
      - application/json
      description: Restore user password and obtain a validation code to create a
        new one
      parameters:
      - description: Request a password restore
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/model.RestorePasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.RestorePasswordResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/apperror.AppError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/apperror.AppError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/apperror.AppError'
      summary: Restore user password
  /password/update:
    patch:
      consumes:
      - application/json
      description: Update user password and obtain new login info
      parameters:
      - description: Update user password object
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/model.UpdatePasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.UserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/apperror.AppError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/apperror.AppError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/apperror.AppError'
      summary: Update user password
  /password/validate-code:
    post:
      consumes:
      - application/json
      description: Validate restore password code
      parameters:
      - description: Validate restore password code object
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/model.ValidateCodeRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ValidateCodeResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/apperror.AppError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/apperror.AppError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/apperror.AppError'
      summary: Validate restore password code
  /user/delete/{id}:
    delete:
      consumes:
      - application/json
      description: Login a user
      parameters:
      - description: User id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.UserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/apperror.AppError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/apperror.AppError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/apperror.AppError'
      summary: Login user
  /user/login:
    post:
      consumes:
      - application/json
      description: Login a user
      parameters:
      - description: User login DTO
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/model.LoginUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.UserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/apperror.AppError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/apperror.AppError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/apperror.AppError'
      summary: Login user
  /user/signup:
    post:
      consumes:
      - application/json
      description: Signup a new user
      parameters:
      - description: Create user request structure
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/model.CreateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.UserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/apperror.AppError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/apperror.AppError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/apperror.AppError'
      summary: Create a new user
schemes:
- http
- https
swagger: "2.0"
